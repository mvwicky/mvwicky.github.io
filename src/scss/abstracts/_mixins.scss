/* Standard border-radius mixin */
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

/* Change an attribute based the screen width
    $break-width: the screen width at which we change an attribute
    $attr: the attribute (property) to change
    $gt: the value if the screen is larger than $break-width
    $lt: the value if the screen is smaller than $break-width
*/
@mixin respond-to-width($break-width, $attr, $gt, $lt) {
  @media (min-width: $break-width) {
    #{$attr}: $gt;
  }
  @media (max-width: $break-width) {
    #{$attr}: $lt;
  }
}

/* Convinence specialization of respond-to-width */
@mixin responsive-width($w) {
  @include respond-to-width($w, "max-width", $w * 0.9, 90%);
}

@function strip-unit($v) {
  @return $v / ($v * 0 + 1);
}

/* From: https://css-tricks.com/snippets/css/fluid-typography/ */
@mixin resp-font($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(
          #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
            ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
        );
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

/* Sets the default min and max viewport widths */
@mixin default-resp-font($min-font-size, $max-font-size) {
  @include resp-font(
    $responsive-min-width,
    $responsive-max-width,
    $min-font-size,
    $max-font-size
  );
}
